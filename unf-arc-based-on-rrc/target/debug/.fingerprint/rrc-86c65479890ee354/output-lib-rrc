{"message":"unused import: `BinaryHeap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":41,"byte_end":51,"line_start":2,"line_end":2,"column_start":24,"column_end":34,"is_primary":true,"text":[{"text":"use std::collections::{BinaryHeap, BTreeSet};","highlight_start":24,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":41,"byte_end":53,"line_start":2,"line_end":2,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"use std::collections::{BinaryHeap, BTreeSet};","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BinaryHeap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:2:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{BinaryHeap, BTreeSet};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":86,"byte_end":90,"line_start":3,"line_end":3,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"use std::hash::{Hash, self};","highlight_start":23,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":84,"byte_end":90,"line_start":3,"line_end":3,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"use std::hash::{Hash, self};","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:3:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::hash::{Hash, self};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::sync::MutexGuard`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":120,"byte_end":141,"line_start":5,"line_end":5,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::sync::MutexGuard;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":116,"byte_end":142,"line_start":5,"line_end":5,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::sync::MutexGuard;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::sync::MutexGuard`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::MutexGuard;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `num`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":175,"byte_end":178,"line_start":6,"line_end":6,"column_start":33,"column_end":36,"is_primary":true,"text":[{"text":"use std::{collections::HashSet, num};","highlight_start":33,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":173,"byte_end":178,"line_start":6,"line_end":6,"column_start":31,"column_end":36,"is_primary":true,"text":[{"text":"use std::{collections::HashSet, num};","highlight_start":31,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `num`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:6:33\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{collections::HashSet, num};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused import: `std::cmp::Ordering`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":185,"byte_end":203,"line_start":7,"line_end":7,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":181,"byte_end":204,"line_start":7,"line_end":7,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::cmp::Ordering`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::cmp::Ordering;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `digest::generic_array::GenericArray`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":209,"byte_end":244,"line_start":8,"line_end":8,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"use digest::generic_array::GenericArray;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":205,"byte_end":245,"line_start":8,"line_end":8,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"use digest::generic_array::GenericArray;","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `digest::generic_array::GenericArray`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse digest::generic_array::GenericArray;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `hex_literal::hex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":250,"byte_end":266,"line_start":9,"line_end":9,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use hex_literal::hex;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":246,"byte_end":267,"line_start":9,"line_end":9,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"use hex_literal::hex;","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `hex_literal::hex`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse hex_literal::hex;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `SystemTime`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":379,"byte_end":389,"line_start":13,"line_end":13,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"use std::time::{SystemTime};","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":363,"byte_end":391,"line_start":13,"line_end":13,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"use std::time::{SystemTime};","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `SystemTime`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:13:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::time::{SystemTime};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":406,"byte_end":410,"line_start":14,"line_end":14,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::{File};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":392,"byte_end":412,"line_start":14,"line_end":14,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::fs::{File};","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `File`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:14:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::{File};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::prelude::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":417,"byte_end":436,"line_start":15,"line_end":15,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":413,"byte_end":437,"line_start":15,"line_end":15,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::prelude::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::prelude::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `CryptoRng`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":458,"byte_end":467,"line_start":16,"line_end":16,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use rand::{RngCore, CryptoRng};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":456,"byte_end":467,"line_start":16,"line_end":16,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"use rand::{RngCore, CryptoRng};","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `CryptoRng`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:16:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rand::{RngCore, CryptoRng};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `PublicKey`, `SharedSecret`, `StaticSecret`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":612,"byte_end":621,"line_start":20,"line_end":20,"column_start":20,"column_end":29,"is_primary":true,"text":[{"text":"use x25519_dalek::{PublicKey, SharedSecret, StaticSecret};","highlight_start":20,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":623,"byte_end":635,"line_start":20,"line_end":20,"column_start":31,"column_end":43,"is_primary":true,"text":[{"text":"use x25519_dalek::{PublicKey, SharedSecret, StaticSecret};","highlight_start":31,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":637,"byte_end":649,"line_start":20,"line_end":20,"column_start":45,"column_end":57,"is_primary":true,"text":[{"text":"use x25519_dalek::{PublicKey, SharedSecret, StaticSecret};","highlight_start":45,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":593,"byte_end":651,"line_start":20,"line_end":20,"column_start":1,"column_end":59,"is_primary":true,"text":[{"text":"use x25519_dalek::{PublicKey, SharedSecret, StaticSecret};","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `PublicKey`, `SharedSecret`, `StaticSecret`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:20:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse x25519_dalek::{PublicKey, SharedSecret, StaticSecret};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `hash_key_prime`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":4640,"byte_end":4654,"line_start":116,"line_end":116,"column_start":48,"column_end":62,"is_primary":true,"text":[{"text":"fn opti_get_hash_msg_set(R: &HashSet<Message>, hash_key_prime: &[u8; 32]) -> [u8; 32] {","highlight_start":48,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":4640,"byte_end":4654,"line_start":116,"line_end":116,"column_start":48,"column_end":62,"is_primary":true,"text":[{"text":"fn opti_get_hash_msg_set(R: &HashSet<Message>, hash_key_prime: &[u8; 32]) -> [u8; 32] {","highlight_start":48,"highlight_end":62}],"label":null,"suggested_replacement":"_hash_key_prime","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `hash_key_prime`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:116:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn opti_get_hash_msg_set(R: &HashSet<Message>, hash_key_prime: &[u8; 32]) -> [u8; 32] {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_hash_key_prime`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"value assigned to `r_bool` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":11059,"byte_end":11065,"line_start":256,"line_end":256,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    let mut r_bool: bool = false;","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `r_bool` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:256:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut r_bool: bool = false;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"message":"value assigned to `r_bool` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":13393,"byte_end":13399,"line_start":311,"line_end":311,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    let mut r_bool: bool = false;","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `r_bool` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:311:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut r_bool: bool = false;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1618,"byte_end":1636,"line_start":55,"line_end":55,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"    let (mut alice_rc_state, mut bob_rc_state) = init_all();","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1618,"byte_end":1622,"line_start":55,"line_end":55,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    let (mut alice_rc_state, mut bob_rc_state) = init_all();","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:55:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut alice_rc_state, mut bob_rc_state) = init_all();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1638,"byte_end":1654,"line_start":55,"line_end":55,"column_start":30,"column_end":46,"is_primary":true,"text":[{"text":"    let (mut alice_rc_state, mut bob_rc_state) = init_all();","highlight_start":30,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1638,"byte_end":1642,"line_start":55,"line_end":55,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"    let (mut alice_rc_state, mut bob_rc_state) = init_all();","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:55:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut alice_rc_state, mut bob_rc_state) = init_all();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1678,"byte_end":1693,"line_start":56,"line_end":56,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let mut alice_state = RrcState{state: alice_rc_state, hash_key: hash_key.to_bytes().clone(), hash_key_prime: hash_key_prime.to_bytes().clone(), S: HashSet::new(), R: HashSet::new(), S_ack: HashSet::new(), max_num: Ordinal { epoch: 0, index: 0 }, security_level: security_level.clone()};","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1678,"byte_end":1682,"line_start":56,"line_end":56,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut alice_state = RrcState{state: alice_rc_state, hash_key: hash_key.to_bytes().clone(), hash_key_prime: hash_key_prime.to_bytes().clone(), S: HashSet::new(), R: HashSet::new(), S_ack: HashSet::new(), max_num: Ordinal { epoch: 0, index: 0 }, security_level: security_level.clone()};","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:56:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut alice_state = RrcState{state: alice_rc_state, hash_key: hash_key.to_bytes().clone(), hash_key_prime: hash_key_prime.to_bytes(\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1969,"byte_end":1982,"line_start":57,"line_end":57,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let mut bob_state = RrcState{state: bob_rc_state, hash_key: hash_key.to_bytes(), hash_key_prime: hash_key_prime.to_bytes(), S: HashSet::new(), R: HashSet::new(), S_ack: HashSet::new(), max_num: Ordinal { epoch: 0, index: 0 }, security_level: security_level};","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1969,"byte_end":1973,"line_start":57,"line_end":57,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut bob_state = RrcState{state: bob_rc_state, hash_key: hash_key.to_bytes(), hash_key_prime: hash_key_prime.to_bytes(), S: HashSet::new(), R: HashSet::new(), S_ack: HashSet::new(), max_num: Ordinal { epoch: 0, index: 0 }, security_level: security_level};","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:57:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut bob_state = RrcState{state: bob_rc_state, hash_key: hash_key.to_bytes(), hash_key_prime: hash_key_prime.to_bytes(), S: HashSe\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":2429,"byte_end":2442,"line_start":64,"line_end":64,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"    let (mut rrc_alice, mut rrc_bob) = rrc_init_all(security_level);","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":2429,"byte_end":2433,"line_start":64,"line_end":64,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    let (mut rrc_alice, mut rrc_bob) = rrc_init_all(security_level);","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:64:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut rrc_alice, mut rrc_bob) = rrc_init_all(security_level);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":2444,"byte_end":2455,"line_start":64,"line_end":64,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"    let (mut rrc_alice, mut rrc_bob) = rrc_init_all(security_level);","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":2444,"byte_end":2448,"line_start":64,"line_end":64,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"    let (mut rrc_alice, mut rrc_bob) = rrc_init_all(security_level);","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:64:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut rrc_alice, mut rrc_bob) = rrc_init_all(security_level);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":16281,"byte_end":16295,"line_start":388,"line_end":388,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"        let mut hashed_msg = hash_msg_w_blake2(msg, &hash_key_prime);","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":16281,"byte_end":16285,"line_start":388,"line_end":388,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut hashed_msg = hash_msg_w_blake2(msg, &hash_key_prime);","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:388:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m388\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut hashed_msg = hash_msg_w_blake2(msg, &hash_key_prime);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"function `updated_ordinal_hash` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":5800,"byte_end":5820,"line_start":143,"line_end":143,"column_start":4,"column_end":24,"is_primary":true,"text":[{"text":"fn updated_ordinal_hash(ord: &Ordinal, prev_hash: &[u8;32]) -> [u8;32] {","highlight_start":4,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `updated_ordinal_hash` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:143:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn updated_ordinal_hash(ord: &Ordinal, prev_hash: &[u8;32]) -> [u8;32] {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"structure field `S` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":784,"byte_end":785,"line_start":28,"line_end":28,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub S: HashSet<Message>,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":784,"byte_end":785,"line_start":28,"line_end":28,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub S: HashSet<Message>,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"s","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:28:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub S: HashSet<Message>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"structure field `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":813,"byte_end":814,"line_start":29,"line_end":29,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub R: HashSet<Message>,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":813,"byte_end":814,"line_start":29,"line_end":29,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub R: HashSet<Message>,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `R` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:29:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub R: HashSet<Message>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"structure field `S_ack` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":842,"byte_end":847,"line_start":30,"line_end":30,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    pub S_ack: HashSet<Message>,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":842,"byte_end":847,"line_start":30,"line_end":30,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    pub S_ack: HashSet<Message>,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"s_ack","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S_ack` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:30:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub S_ack: HashSet<Message>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s_ack`\u001b[0m\n\n"}
{"message":"structure field `hash_S` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1066,"byte_end":1072,"line_start":41,"line_end":41,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    pub hash_S: RistrettoHash<Sha512>,","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":1066,"byte_end":1072,"line_start":41,"line_end":41,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    pub hash_S: RistrettoHash<Sha512>,","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"hash_s","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `hash_S` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:41:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub hash_S: RistrettoHash<Sha512>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `hash_s`\u001b[0m\n\n"}
{"message":"structure field `S` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3390,"byte_end":3391,"line_start":82,"line_end":82,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub S: HashSet<Message>,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3390,"byte_end":3391,"line_start":82,"line_end":82,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub S: HashSet<Message>,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"s","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:82:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub S: HashSet<Message>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s`\u001b[0m\n\n"}
{"message":"structure field `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3419,"byte_end":3420,"line_start":83,"line_end":83,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub R: (HashSet<Ordinal>, [u8;32])","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3419,"byte_end":3420,"line_start":83,"line_end":83,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub R: (HashSet<Ordinal>, [u8;32])","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `R` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:83:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub R: (HashSet<Ordinal>, [u8;32])\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"structure field `S` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3544,"byte_end":3545,"line_start":89,"line_end":89,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub S: HashSet<Message>,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3544,"byte_end":3545,"line_start":89,"line_end":89,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub S: HashSet<Message>,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"s","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:89:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub S: HashSet<Message>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s`\u001b[0m\n\n"}
{"message":"structure field `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3573,"byte_end":3574,"line_start":90,"line_end":90,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub R: (HashSet<Ordinal>, [u8;32 + 2 * m_bytes])","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3573,"byte_end":3574,"line_start":90,"line_end":90,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub R: (HashSet<Ordinal>, [u8;32 + 2 * m_bytes])","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `R` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:90:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub R: (HashSet<Ordinal>, [u8;32 + 2 * m_bytes])\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3641,"byte_end":3642,"line_start":93,"line_end":93,"column_start":21,"column_end":22,"is_primary":true,"text":[{"text":"fn get_hash_msg_set(R: &HashSet<Message>, hash_key_prime: [u8; 32]) -> [u8; 32] {","highlight_start":21,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3641,"byte_end":3642,"line_start":93,"line_end":93,"column_start":21,"column_end":22,"is_primary":true,"text":[{"text":"fn get_hash_msg_set(R: &HashSet<Message>, hash_key_prime: [u8; 32]) -> [u8; 32] {","highlight_start":21,"highlight_end":22}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:93:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn get_hash_msg_set(R: &HashSet<Message>, hash_key_prime: [u8; 32]) -> [u8; 32] {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `R_sorted` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3781,"byte_end":3789,"line_start":95,"line_end":95,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut R_sorted: BTreeSet<Message> = BTreeSet::new();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":3781,"byte_end":3789,"line_start":95,"line_end":95,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut R_sorted: BTreeSet<Message> = BTreeSet::new();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"r_sorted","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R_sorted` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:95:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut R_sorted: BTreeSet<Message> = BTreeSet::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_sorted`\u001b[0m\n\n"}
{"message":"variable `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":4618,"byte_end":4619,"line_start":116,"line_end":116,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn opti_get_hash_msg_set(R: &HashSet<Message>, hash_key_prime: &[u8; 32]) -> [u8; 32] {","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":4618,"byte_end":4619,"line_start":116,"line_end":116,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn opti_get_hash_msg_set(R: &HashSet<Message>, hash_key_prime: &[u8; 32]) -> [u8; 32] {","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:116:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn opti_get_hash_msg_set(R: &HashSet<Message>, hash_key_prime: &[u8; 32]) -> [u8; 32] {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":5276,"byte_end":5277,"line_start":130,"line_end":130,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"fn opti_get_hash_ordinal_set(R: &HashSet<Ordinal>) -> [u8;32] {","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":5276,"byte_end":5277,"line_start":130,"line_end":130,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"fn opti_get_hash_ordinal_set(R: &HashSet<Ordinal>) -> [u8;32] {","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:130:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn opti_get_hash_ordinal_set(R: &HashSet<Ordinal>) -> [u8;32] {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":6542,"byte_end":6543,"line_start":157,"line_end":157,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"fn get_hash_ordinal_set(R: &HashSet<Ordinal>) -> [u8; 32] {","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":6542,"byte_end":6543,"line_start":157,"line_end":157,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"fn get_hash_ordinal_set(R: &HashSet<Ordinal>) -> [u8; 32] {","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:157:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn get_hash_ordinal_set(R: &HashSet<Ordinal>) -> [u8; 32] {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `R_sorted` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":6590,"byte_end":6598,"line_start":158,"line_end":158,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut R_sorted : BTreeSet<Ordinal> = BTreeSet::new();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":6590,"byte_end":6598,"line_start":158,"line_end":158,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut R_sorted : BTreeSet<Ordinal> = BTreeSet::new();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"r_sorted","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R_sorted` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:158:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut R_sorted : BTreeSet<Ordinal> = BTreeSet::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_sorted`\u001b[0m\n\n"}
{"message":"variable `R_prime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":7491,"byte_end":7498,"line_start":181,"line_end":181,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let R_prime: (HashSet<Ordinal>, [u8; 32]) = (nums_prime.clone(), get_hash_msg_set(&state.R, state.hash_key_prime));","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":7491,"byte_end":7498,"line_start":181,"line_end":181,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let R_prime: (HashSet<Ordinal>, [u8; 32]) = (nums_prime.clone(), get_hash_msg_set(&state.R, state.hash_key_prime));","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"r_prime","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R_prime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:181:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let R_prime: (HashSet<Ordinal>, [u8; 32]) = (nums_prime.clone(), get_hash_msg_set(&state.R, state.hash_key_prime));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_prime`\u001b[0m\n\n"}
{"message":"variable `R_star` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":11146,"byte_end":11152,"line_start":259,"line_end":259,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"        let mut R_star: HashSet<Message> = HashSet::new();","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":11146,"byte_end":11152,"line_start":259,"line_end":259,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"        let mut R_star: HashSet<Message> = HashSet::new();","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"r_star","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R_star` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:259:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut R_star: HashSet<Message> = HashSet::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_star`\u001b[0m\n\n"}
{"message":"variable `R_prime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":11541,"byte_end":11548,"line_start":270,"line_end":270,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut R_prime: HashSet<Message> = HashSet::new();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":11541,"byte_end":11548,"line_start":270,"line_end":270,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut R_prime: HashSet<Message> = HashSet::new();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"r_prime","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R_prime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:270:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut R_prime: HashSet<Message> = HashSet::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_prime`\u001b[0m\n\n"}
{"message":"variable `S_ack_prime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":12235,"byte_end":12246,"line_start":284,"line_end":284,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"        let mut S_ack_prime: HashSet<Message> = HashSet::new();","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":12235,"byte_end":12246,"line_start":284,"line_end":284,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"        let mut S_ack_prime: HashSet<Message> = HashSet::new();","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":"s_ack_prime","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S_ack_prime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:284:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut S_ack_prime: HashSet<Message> = HashSet::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s_ack_prime`\u001b[0m\n\n"}
{"message":"variable `R_star` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":13480,"byte_end":13486,"line_start":314,"line_end":314,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"        let mut R_star: HashSet<Message> = HashSet::new();","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":13480,"byte_end":13486,"line_start":314,"line_end":314,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"        let mut R_star: HashSet<Message> = HashSet::new();","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"r_star","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R_star` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:314:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut R_star: HashSet<Message> = HashSet::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_star`\u001b[0m\n\n"}
{"message":"variable `R_prime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":13948,"byte_end":13955,"line_start":325,"line_end":325,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut R_prime: HashSet<Message> = HashSet::new();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":13948,"byte_end":13955,"line_start":325,"line_end":325,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut R_prime: HashSet<Message> = HashSet::new();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"r_prime","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R_prime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:325:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut R_prime: HashSet<Message> = HashSet::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_prime`\u001b[0m\n\n"}
{"message":"variable `S_ack_prime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":14459,"byte_end":14470,"line_start":336,"line_end":336,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"        let mut S_ack_prime: HashSet<Message> = HashSet::new();","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":14459,"byte_end":14470,"line_start":336,"line_end":336,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"        let mut S_ack_prime: HashSet<Message> = HashSet::new();","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":"s_ack_prime","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S_ack_prime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:336:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut S_ack_prime: HashSet<Message> = HashSet::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s_ack_prime`\u001b[0m\n\n"}
{"message":"constant `m` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":15406,"byte_end":15407,"line_start":369,"line_end":369,"column_start":7,"column_end":8,"is_primary":true,"text":[{"text":"const m: usize = 256 + 24; // We support 2^24 messages with hashes of 256 bits","highlight_start":7,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_upper_case_globals)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":15406,"byte_end":15407,"line_start":369,"line_end":369,"column_start":7,"column_end":8,"is_primary":true,"text":[{"text":"const m: usize = 256 + 24; // We support 2^24 messages with hashes of 256 bits","highlight_start":7,"highlight_end":8}],"label":null,"suggested_replacement":"M","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `m` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:369:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst m: usize = 256 + 24; // We support 2^24 messages with hashes of 256 bits\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `M`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_upper_case_globals)]` on by default\u001b[0m\n\n"}
{"message":"constant `m_bytes` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":15485,"byte_end":15492,"line_start":370,"line_end":370,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"const m_bytes: usize = m / 8;","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":15485,"byte_end":15492,"line_start":370,"line_end":370,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"const m_bytes: usize = m / 8;","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":"M_BYTES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `m_bytes` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:370:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst m_bytes: usize = m / 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `M_BYTES`\u001b[0m\n\n"}
{"message":"variable `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":15746,"byte_end":15747,"line_start":376,"line_end":376,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"fn incremental_hash_fct_of_whole_set(R: &HashSet<Message>, hash_key_prime: &[u8; 32]) -> [u8; 32 + 2 * m_bytes] {","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":15746,"byte_end":15747,"line_start":376,"line_end":376,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"fn incremental_hash_fct_of_whole_set(R: &HashSet<Message>, hash_key_prime: &[u8; 32]) -> [u8; 32 + 2 * m_bytes] {","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:376:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn incremental_hash_fct_of_whole_set(R: &HashSet<Message>, hash_key_prime: &[u8; 32]) -> [u8; 32 + 2 * m_bytes] {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `nbr_elems_in_R_bytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":16692,"byte_end":16712,"line_start":396,"line_end":396,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let nbr_elems_in_R_bytes = (R.len()).to_be_bytes();","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":16692,"byte_end":16712,"line_start":396,"line_end":396,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let nbr_elems_in_R_bytes = (R.len()).to_be_bytes();","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"nbr_elems_in_r_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `nbr_elems_in_R_bytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:396:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m396\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let nbr_elems_in_R_bytes = (R.len()).to_be_bytes();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nbr_elems_in_r_bytes`\u001b[0m\n\n"}
{"message":"variable `cardinality_R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":19587,"byte_end":19600,"line_start":450,"line_end":450,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"    let mut cardinality_R: usize = usize::from_be_bytes(incremental_hash[32 + m_bytes - usize_for_env..32 + m_bytes].try_into().unwrap());","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":19587,"byte_end":19600,"line_start":450,"line_end":450,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"    let mut cardinality_R: usize = usize::from_be_bytes(incremental_hash[32 + m_bytes - usize_for_env..32 + m_bytes].try_into().unwrap());","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":"cardinality_r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `cardinality_R` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:450:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut cardinality_R: usize = usize::from_be_bytes(incremental_hash[32 + m_bytes - usize_for_env..32 + m_bytes].try_into().unwrap());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cardinality_r`\u001b[0m\n\n"}
{"message":"variable `nbr_elems_in_R_bytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":19746,"byte_end":19766,"line_start":452,"line_end":452,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let nbr_elems_in_R_bytes = (cardinality_R).to_be_bytes();","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":19746,"byte_end":19766,"line_start":452,"line_end":452,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let nbr_elems_in_R_bytes = (cardinality_R).to_be_bytes();","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"nbr_elems_in_r_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `nbr_elems_in_R_bytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:452:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m452\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let nbr_elems_in_R_bytes = (cardinality_R).to_be_bytes();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nbr_elems_in_r_bytes`\u001b[0m\n\n"}
{"message":"variable `R_prime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":20654,"byte_end":20661,"line_start":470,"line_end":470,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let R_prime: (HashSet<Ordinal>, [u8; 32 + 2 * m_bytes]) = (state.nums_prime.clone(), state.incremental_hash);","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs","byte_start":20654,"byte_end":20661,"line_start":470,"line_end":470,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let R_prime: (HashSet<Ordinal>, [u8; 32 + 2 * m_bytes]) = (state.nums_prime.clone(), state.incremental_hash);","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"r_prime","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R_prime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/nathan/Desktop/EPFL/MA2/Project/Implementation/rc/rrc/src/lib.rs:470:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let R_prime: (HashSet<Ordinal>, [u8; 32 + 2 * m_bytes]) = (state.nums_prime.clone(), state.incremental_hash);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_prime`\u001b[0m\n\n"}
{"message":"51 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 51 warnings emitted\u001b[0m\n\n"}
